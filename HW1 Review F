---
title: "Final Prep Material"
author: "Kevin Guo"
date: "Sunday, May 10, 2015"
output: html_document
---

```{r}
#Create variables; 
#subset a dateframe using subset(); 
#extract a column of a dataframe using $; 
#add a column to an exsiting data frame using data.frame() or cbind; 

# seq(); 
# max(); 
# sd(); 
# rnorm(); 
# mean(); 
# paste0(); 
# subset(); 
# data.frame(); 
# cbind(); 
# sum(); 
# length(); 
# summary(); 
# cor();
###################################################################################
####Create variables

# Create a variable:
# << x >> : a vector with the integers 1 through 100.
x <- 1:100
x
## Or any of the following
# x <- seq(1, 100, by=1)
# x = seq(from=1, to=100, by=1)

# Create the variable
# << y >> : a vector of length 100 which has the even numbers from 2 to 200.
y <- seq(from=2, to=200, by=2)
y

# << z >> : a vector of length 20 with character entries, "hw1", "hw2", ..., "hw20"
z <- paste0("hw", seq(1:20))
z
## Check the R Markdown for paste()

# Create the variable
# << m >> : a vector of length 100 with entries from a standard normal distribution
set.seed(42)
m <- rnorm(100)
m

# Create the variable
# << mean.m >> : a scalar, the mean of the numbers in << m >>
mean.m <- mean(m)
mean.m

# Creat the variable
# << sd.m >> : a scalar, the standard deviation of the numbers in << m >>
sd.m <- sd(m)

# Create the variable
# << max.m >> : a scalar, the maximum of the numbers in << m >>
max.m <- max(m)
max.m

#################################################################################
####Data Frame
load("family.rda")
class(family)
family

# Create a new data frame 
# << family.men >> : a data frame that is a subset of family, with only the men
family.men <- subset(family, gender=="m")
family.men

# Create a new data frame 
# << family.young >> : a data frame, subset of family, with only people *under* 40
family.young <- subset(family, age<40)
family.young

# Create a new data frame 
# << family.30y68i >> : a data frame, subset of family, with only people *over* 30, *shorter* than 68 in
family.30y68i <- subset(family, age>30 & height < 68)
family.30y68i

# Formula for BMI : BMI = (weight in lbs) / (height in in)^2 * 703
# Note: the dataframe has weight in lbs and height in in as required.
# Create a new variable 
# << bmi >> : a vector with the BMI of each family member 
bmi <- c(family$weight/(family$height)^2 * 703)

# Create a new data frame
# << family2 >> : family with an added column of BMI, with column name bmi
family2 <- data.frame(family, bmi)
family2
# or family2 <- cbind(family, bmi)
##########################################################################################
# Another Example

# A column
# extracted from a data frame is a vector object. Many operations in R can be
# performed on vectors but not on data frames.


# ex1.data.v <- ex1.data$x
# data.class <- class(ex1.data.v)
# n.ex1.data <- length(ex1.data.v)
# data.mean <- mean(ex1.data.v)
# data.mean.trimmed <- mean(ex1.data.v, trim=0.1)
# data.sd <- sd(ex1.data.v)
# min.ex1.data <- min(ex1.data.v)
# max.ex1.data <- max(ex1.data.v)
# data.summary <- summary(ex1.data.v)
# ex1.data.double <- 2 * ex1.data.v
# ex1.data.sum <- sum(ex1.data.v)

# random.data <- rnorm(100)
# data.cor <- cor(ex1.data.v, random.data)
## Find the correlation
```

